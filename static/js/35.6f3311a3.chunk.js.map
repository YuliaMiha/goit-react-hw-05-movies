{"version":3,"file":"static/js/35.6f3311a3.chunk.js","mappings":"mMAGaA,EAAW,SAAC,GAAY,IAAXC,EAAU,EAAVA,MAChBC,GAAWC,EAAAA,EAAAA,MACjB,OACI,wBACCF,EAAMG,KAAI,SAAAC,GAAI,OACb,yBACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAML,GAAYM,GAAE,kBAAaH,EAAKI,IAArD,SACGJ,EAAKK,SAFDL,EAAKI,GADD,KAStB,C,uJCVYE,EAAW,WACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOX,EAAP,KAAcY,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEIC,EAAAA,EAAAA,MAFJ,QAETC,EAFS,QAGNC,QAAQC,QACfN,EAASI,EAAKC,SAJD,gDAOfE,QAAQC,IAAR,MACAC,EAAAA,OAAAA,OAAc,YARC,yDAAH,qDAWhBP,GACD,GAAE,KAEI,SAACf,EAAA,EAAD,CAAWC,MAAOA,GAC1B,C,sNCvBYsB,EAAU,kCAEjBC,EAAeC,EAAAA,EAAAA,OAAa,CAC9BC,QAAS,+BACTC,OAAQ,CACJC,QAAS,sCAIJZ,EAAgB,mCAAG,sGACPQ,EAAaK,IAAI,sBADV,uBACrBZ,EADqB,EACrBA,KADqB,kBAErBA,GAFqB,2CAAH,qDAMhBa,EAAc,mCAAI,WAAMH,GAAN,yFACNH,EAAaK,IAAI,gBAAiB,CAAEF,OAAAA,IAD9B,uBACrBV,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAJ,sDAKdc,EAAe,mCAAI,WAAMtB,GAAN,yFACPe,EAAaK,IAAb,iBAA2BpB,IADpB,uBACtBQ,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAJ,sDAKfe,EAAe,mCAAI,WAAMvB,GAAN,yFACPe,EAAaK,IAAb,iBAA2BpB,EAA3B,aADO,uBACtBQ,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAJ,sDAKfgB,EAAe,mCAAI,WAAMxB,GAAN,yFACPe,EAAaK,IAAb,iBAA2BpB,EAA3B,aADO,uBACtBQ,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAJ,qD","sources":["components/MovieList/MovieList.jsx","pages/HomePage/HomePage.jsx","services/movieApi.js"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\"\nimport PropTypes from 'prop-types';\n\nexport const MovieList =({movie}) =>{\n    const location = useLocation();\n    return(\n        <ul>\n        {movie.map(item => (\n          <li key={item.id}>\n            <Link state={{ from: location }} to={`/movies/${item.id}`}>\n              {item.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    )\n}\n\nMovieList.propTypes = {\n    movie: PropTypes.array.isRequired\n}"," import { useEffect, useState } from 'react';\nimport { getMovieTrending } from 'services/movieApi';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { MovieList } from 'components/MovieList/MovieList';\n\nexport const HomePage = () => {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const data = await getMovieTrending();\n        if (data.results.length) {\n          setMovie(data.results);\n        }\n      } catch (error) {\n        console.log(error);\n        Notify.failed('No films');\n      }\n    };\n    fetchMovie();\n  }, []);\n\n  return <MovieList movie={movie} />;\n};","import axios from 'axios';\n\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst movieService = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params: {\n        api_key: 'd4c1160dfb24302d7b96bc867bcaabe6'\n    }\n})\n\nexport const getMovieTrending = async () => {\n    const {data} = await movieService.get('trending/movie/day');\n    return data;\n};\n\n\nexport const getMovieSearch  = async params => {\n  const { data } = await movieService.get('/search/movie', { params });\n  return data;\n};\n\nexport const getMovieDetails  = async id => {\n  const { data } = await movieService.get(`/movie/${id}` );\n  return data;\n};\n\nexport const getMovieCredits  = async id => {\n  const { data } = await movieService.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews  = async id => {\n  const { data } = await movieService.get(`/movie/${id}/reviews`);\n  return data;\n};"],"names":["MovieList","movie","location","useLocation","map","item","state","from","to","id","title","HomePage","useState","setMovie","useEffect","fetchMovie","getMovieTrending","data","results","length","console","log","Notify","IMG_URL","movieService","axios","baseURL","params","api_key","get","getMovieSearch","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}